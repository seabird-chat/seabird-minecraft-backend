plugins {
    id "com.google.protobuf" version "0.8.12"
    id "java"
}

architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/seabird-minecraft-backend.accesswidener")
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury:${rootProject.architectury_version}"

    // Protobuf/gRPC dependencies - we specify these as dependencies
    // here, but they're included in the jar in both the fabric and
    // forge sub-projects.
    implementation "io.grpc:grpc-protobuf:${rootProject.grpc_version}"
    implementation "io.grpc:grpc-stub:${rootProject.grpc_version}"
    implementation "io.grpc:grpc-netty-shaded:${rootProject.grpc_version}"
    implementation "javax.annotation:javax.annotation-api:1.3.2"
    implementation "com.google.guava:guava:31.1-jre"
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${rootProject.protoc_version}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${rootProject.grpc_version}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

// We get a warning about processResources not depending on extractProto without this.
processResources.dependsOn ':common:extractProto'

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}

